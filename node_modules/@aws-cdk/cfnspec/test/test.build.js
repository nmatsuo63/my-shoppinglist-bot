"use strict";
const build_1 = require("../build-tools/build");
module.exports = {
    'dropTypelessAttributes works correctly'(test) {
        const spec = {
            Fingerprint: 'some-fingerprint',
            PropertyTypes: {
                'CDK::Test::Property': {
                    Properties: {
                        Type: {
                            PrimitiveType: 'String',
                        },
                    },
                }
            },
            ResourceTypes: {
                'CDK::Test::Resource': {
                    Attributes: {
                        Attribute1: {
                            PrimitiveType: 'String'
                        },
                        Attribute2: {},
                    },
                    Documentation: 'https://documentation-url/cdk/test/resource',
                    Properties: {
                        ResourceArn: {
                            PrimitiveType: 'String',
                        },
                    }
                }
            }
        };
        build_1.massageSpec(spec);
        test.deepEqual(spec, {
            Fingerprint: 'some-fingerprint',
            PropertyTypes: {
                'CDK::Test::Property': {
                    Properties: {
                        Type: {
                            PrimitiveType: 'String',
                        },
                    },
                }
            },
            ResourceTypes: {
                'CDK::Test::Resource': {
                    Attributes: {
                        Attribute1: ({
                            PrimitiveType: 'String'
                        }),
                    },
                    Documentation: 'https://documentation-url/cdk/test/resource',
                    Properties: {
                        ResourceArn: {
                            PrimitiveType: 'String',
                        },
                    }
                }
            }
        });
        test.done();
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5idWlsZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRlc3QuYnVpbGQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLGdEQUFtRDtBQUduRCxpQkFBUztJQUNQLHdDQUF3QyxDQUFDLElBQVU7UUFDakQsTUFBTSxJQUFJLEdBQXlCO1lBQ2pDLFdBQVcsRUFBRSxrQkFBa0I7WUFDL0IsYUFBYSxFQUFFO2dCQUNiLHFCQUFxQixFQUFFO29CQUNyQixVQUFVLEVBQUU7d0JBQ1YsSUFBSSxFQUFHOzRCQUNMLGFBQWEsRUFBRSxRQUFRO3lCQUNFO3FCQUM1QjtpQkFDRjthQUNGO1lBQ0QsYUFBYSxFQUFFO2dCQUNiLHFCQUFxQixFQUFFO29CQUNyQixVQUFVLEVBQUU7d0JBQ1YsVUFBVSxFQUFHOzRCQUNYLGFBQWEsRUFBRSxRQUFRO3lCQUNNO3dCQUMvQixVQUFVLEVBQUcsRUFBZ0M7cUJBQzlDO29CQUNELGFBQWEsRUFBRSw2Q0FBNkM7b0JBQzVELFVBQVUsRUFBRTt3QkFDVixXQUFXLEVBQUc7NEJBQ1osYUFBYSxFQUFFLFFBQVE7eUJBQ0s7cUJBQy9CO2lCQUNGO2FBQ0Y7U0FDRixDQUFDO1FBRUYsbUJBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVsQixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksRUFBRTtZQUNuQixXQUFXLEVBQUUsa0JBQWtCO1lBQy9CLGFBQWEsRUFBRTtnQkFDYixxQkFBcUIsRUFBRTtvQkFDckIsVUFBVSxFQUFFO3dCQUNWLElBQUksRUFBRzs0QkFDTCxhQUFhLEVBQUUsUUFBUTt5QkFDRTtxQkFDNUI7aUJBQ0Y7YUFDRjtZQUNELGFBQWEsRUFBRTtnQkFDYixxQkFBcUIsRUFBRTtvQkFDckIsVUFBVSxFQUFFO3dCQUNWLFVBQVUsRUFBRSxDQUFDOzRCQUNYLGFBQWEsRUFBRSxRQUFRO3lCQUN4QixDQUFDO3FCQUNIO29CQUNELGFBQWEsRUFBRSw2Q0FBNkM7b0JBQzVELFVBQVUsRUFBRTt3QkFDVixXQUFXLEVBQUU7NEJBQ1gsYUFBYSxFQUFFLFFBQVE7eUJBQ3hCO3FCQUNGO2lCQUNGO2FBQ0Y7U0FDRixDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUM7SUFDZCxDQUFDO0NBQ0YsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRlc3QgfSBmcm9tICdub2RldW5pdCc7XG5pbXBvcnQgeyBtYXNzYWdlU3BlYyB9IGZyb20gJy4uL2J1aWxkLXRvb2xzL2J1aWxkJztcbmltcG9ydCB7IHNjaGVtYSB9IGZyb20gJy4uL2xpYic7XG5cbmV4cG9ydCA9IHtcbiAgJ2Ryb3BUeXBlbGVzc0F0dHJpYnV0ZXMgd29ya3MgY29ycmVjdGx5Jyh0ZXN0OiBUZXN0KSB7XG4gICAgY29uc3Qgc3BlYzogc2NoZW1hLlNwZWNpZmljYXRpb24gPSB7XG4gICAgICBGaW5nZXJwcmludDogJ3NvbWUtZmluZ2VycHJpbnQnLFxuICAgICAgUHJvcGVydHlUeXBlczoge1xuICAgICAgICAnQ0RLOjpUZXN0OjpQcm9wZXJ0eSc6IHtcbiAgICAgICAgICBQcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICBUeXBlOiAoe1xuICAgICAgICAgICAgICBQcmltaXRpdmVUeXBlOiAnU3RyaW5nJyxcbiAgICAgICAgICAgIH0gYXMgc2NoZW1hLlNjYWxhclByb3BlcnR5KSwgLy8gdHMgaXMgYmVpbmcgd2VpcmQgYW5kIGRvZXNuJ3QgY29ycmVjdGx5IG1hdGNoIHRoZSB0eXBlXG4gICAgICAgICAgfSxcbiAgICAgICAgfVxuICAgICAgfSxcbiAgICAgIFJlc291cmNlVHlwZXM6IHtcbiAgICAgICAgJ0NESzo6VGVzdDo6UmVzb3VyY2UnOiB7XG4gICAgICAgICAgQXR0cmlidXRlczoge1xuICAgICAgICAgICAgQXR0cmlidXRlMTogKHtcbiAgICAgICAgICAgICAgUHJpbWl0aXZlVHlwZTogJ1N0cmluZydcbiAgICAgICAgICAgIH0gYXMgc2NoZW1hLlByaW1pdGl2ZUF0dHJpYnV0ZSksIC8vIHRzIGlzIGJlaW5nIHdlaXJkIGFuZCBkb2Vzbid0IGNvcnJlY3RseSBtYXRjaCB0aGUgdHlwZVxuICAgICAgICAgICAgQXR0cmlidXRlMjogKHt9IGFzIHNjaGVtYS5QcmltaXRpdmVBdHRyaWJ1dGUpLFxuICAgICAgICAgIH0sXG4gICAgICAgICAgRG9jdW1lbnRhdGlvbjogJ2h0dHBzOi8vZG9jdW1lbnRhdGlvbi11cmwvY2RrL3Rlc3QvcmVzb3VyY2UnLFxuICAgICAgICAgIFByb3BlcnRpZXM6IHtcbiAgICAgICAgICAgIFJlc291cmNlQXJuOiAoe1xuICAgICAgICAgICAgICBQcmltaXRpdmVUeXBlOiAnU3RyaW5nJyxcbiAgICAgICAgICAgIH0gYXMgc2NoZW1hLlByaW1pdGl2ZVByb3BlcnR5KSwgLy8gdHMgaXMgYmVpbmcgd2VpcmQgYW5kIGRvZXNuJ3QgY29ycmVjdGx5IG1hdGNoIHRoZSB0eXBlXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIG1hc3NhZ2VTcGVjKHNwZWMpO1xuXG4gICAgdGVzdC5kZWVwRXF1YWwoc3BlYywge1xuICAgICAgRmluZ2VycHJpbnQ6ICdzb21lLWZpbmdlcnByaW50JyxcbiAgICAgIFByb3BlcnR5VHlwZXM6IHtcbiAgICAgICAgJ0NESzo6VGVzdDo6UHJvcGVydHknOiB7XG4gICAgICAgICAgUHJvcGVydGllczoge1xuICAgICAgICAgICAgVHlwZTogKHtcbiAgICAgICAgICAgICAgUHJpbWl0aXZlVHlwZTogJ1N0cmluZycsXG4gICAgICAgICAgICB9IGFzIHNjaGVtYS5TY2FsYXJQcm9wZXJ0eSksIC8vIHRzIGlzIGJlaW5nIHdlaXJkIGFuZCBkb2Vzbid0IGNvcnJlY3RseSBtYXRjaCB0aGUgdHlwZVxuICAgICAgICAgIH0sXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBSZXNvdXJjZVR5cGVzOiB7XG4gICAgICAgICdDREs6OlRlc3Q6OlJlc291cmNlJzoge1xuICAgICAgICAgIEF0dHJpYnV0ZXM6IHtcbiAgICAgICAgICAgIEF0dHJpYnV0ZTE6ICh7XG4gICAgICAgICAgICAgIFByaW1pdGl2ZVR5cGU6ICdTdHJpbmcnXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIERvY3VtZW50YXRpb246ICdodHRwczovL2RvY3VtZW50YXRpb24tdXJsL2Nkay90ZXN0L3Jlc291cmNlJyxcbiAgICAgICAgICBQcm9wZXJ0aWVzOiB7XG4gICAgICAgICAgICBSZXNvdXJjZUFybjoge1xuICAgICAgICAgICAgICBQcmltaXRpdmVUeXBlOiAnU3RyaW5nJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0ZXN0LmRvbmUoKTtcbiAgfVxufTtcbiJdfQ==